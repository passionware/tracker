-- Add cross-workspace project support
-- This migration converts project table from single workspace to multiple workspaces using many-to-many relationship

-- 1. Create junction table for project-workspace many-to-many relationship
CREATE TABLE "public"."link_project_workspace" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "project_id" bigint NOT NULL,
    "workspace_id" bigint NOT NULL,
    "is_primary" boolean DEFAULT false NOT NULL
);

-- Add primary key and foreign key constraints
ALTER TABLE "public"."link_project_workspace" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."link_project_workspace_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."link_project_workspace" 
ADD CONSTRAINT "link_project_workspace_pkey" PRIMARY KEY ("id");

ALTER TABLE "public"."link_project_workspace" 
ADD CONSTRAINT "link_project_workspace_project_id_fkey" FOREIGN KEY ("project_id") REFERENCES "public"."project"("id") ON DELETE CASCADE;

ALTER TABLE "public"."link_project_workspace" 
ADD CONSTRAINT "link_project_workspace_workspace_id_fkey" FOREIGN KEY ("workspace_id") REFERENCES "public"."workspace"("id") ON DELETE CASCADE;

-- Add unique constraint to prevent duplicate project-workspace pairs
ALTER TABLE "public"."link_project_workspace" 
ADD CONSTRAINT "link_project_workspace_unique" UNIQUE ("project_id", "workspace_id");

-- 2. Migrate existing data from workspace_id to the new junction table
INSERT INTO "public"."link_project_workspace" ("project_id", "workspace_id", "is_primary")
SELECT "id", "workspace_id", true 
FROM "public"."project";

-- 3. Update policies to use the new junction table
DROP POLICY "all in workspace" ON "public"."project";
CREATE POLICY "all in workspace" ON "public"."project" 
USING ((EXISTS ( 
  SELECT 1 
  FROM "public"."link_project_workspace" "lpw"
  WHERE ("lpw"."project_id" = "project"."id") 
  AND EXISTS (
    SELECT 1 
    FROM "public"."link_workspace_user" "lwu"
    WHERE ("lwu"."workspace_id" = "lpw"."workspace_id") 
    AND ("lwu"."user_id" = "auth"."uid"())
  )
)));

-- Update project_iteration policy to use the new junction table
DROP POLICY "all same workspace" ON "public"."project_iteration";
CREATE POLICY "all same workspace" ON "public"."project_iteration" 
USING ((EXISTS ( 
  SELECT 1 
  FROM "public"."project" "p"
  JOIN "public"."link_project_workspace" "lpw" ON ("p"."id" = "lpw"."project_id")
  WHERE ("project_iteration"."project_id" = "p"."id") 
  AND EXISTS (
    SELECT 1 
    FROM "public"."link_workspace_user" "lwu"
    WHERE ("lwu"."workspace_id" = "lpw"."workspace_id") 
    AND ("lwu"."user_id" = "auth"."uid"())
  )
)));

-- 4. Remove the old workspace_id column
ALTER TABLE "public"."project" 
DROP COLUMN "workspace_id";

-- 5. Enable RLS on the new junction table
ALTER TABLE "public"."link_project_workspace" ENABLE ROW LEVEL SECURITY;

-- 6. Create RLS policies for the junction table
CREATE POLICY "read project workspace links" ON "public"."link_project_workspace" 
FOR SELECT USING ((EXISTS ( 
  SELECT 1 
  FROM "public"."link_workspace_user" "lwu"
  WHERE (("lwu"."workspace_id" = "link_project_workspace"."workspace_id") 
  AND ("lwu"."user_id" = "auth"."uid"()))
)));

CREATE POLICY "insert project workspace links" ON "public"."link_project_workspace" 
FOR INSERT WITH CHECK ((EXISTS ( 
  SELECT 1 
  FROM "public"."link_workspace_user" "lwu"
  WHERE (("lwu"."workspace_id" = "link_project_workspace"."workspace_id") 
  AND ("lwu"."user_id" = "auth"."uid"()))
)));

CREATE POLICY "update project workspace links" ON "public"."link_project_workspace" 
FOR UPDATE USING ((EXISTS ( 
  SELECT 1 
  FROM "public"."link_workspace_user" "lwu"
  WHERE (("lwu"."workspace_id" = "link_project_workspace"."workspace_id") 
  AND ("lwu"."user_id" = "auth"."uid"()))
))) WITH CHECK (true);

CREATE POLICY "delete project workspace links" ON "public"."link_project_workspace" 
FOR DELETE USING ((EXISTS ( 
  SELECT 1 
  FROM "public"."link_workspace_user" "lwu"
  WHERE (("lwu"."workspace_id" = "link_project_workspace"."workspace_id") 
  AND ("lwu"."user_id" = "auth"."uid"()))
)));

-- 7. Grant permissions on the new table
GRANT ALL ON TABLE "public"."link_project_workspace" TO "anon";
GRANT ALL ON TABLE "public"."link_project_workspace" TO "authenticated";
GRANT ALL ON TABLE "public"."link_project_workspace" TO "service_role";

GRANT ALL ON SEQUENCE "public"."link_project_workspace_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."link_project_workspace_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."link_project_workspace_id_seq" TO "service_role";

-- 8. Create indexes for performance
CREATE INDEX "idx_link_project_workspace_project_id" ON "public"."link_project_workspace" ("project_id");
CREATE INDEX "idx_link_project_workspace_workspace_id" ON "public"."link_project_workspace" ("workspace_id");
CREATE INDEX "idx_link_project_workspace_is_primary" ON "public"."link_project_workspace" ("is_primary");

-- 9. Add comments
COMMENT ON TABLE "public"."link_project_workspace" IS 'Many-to-many relationship between projects and workspaces';
COMMENT ON COLUMN "public"."link_project_workspace"."is_primary" IS 'Indicates if this is the primary workspace for the project';
